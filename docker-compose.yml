# EV Charging Simulation - Extended Configuration
# 25+ services for comprehensive autonomous testing
# No user interaction required - fully autonomous operation
# 
# AUTONOMOUS OPERATION:
# - 10 Charging Points (CP-001 to CP-010) with diverse power ratings
# - 10 Health Monitors (one per CP)
# - 5 Driver clients with different request intervals
# - 1 Central Controller with web dashboard
# - 1 Kafka message broker
#
# OBSERVABILITY:
# - All terminals show clear, colored output
# - Central: Request routing, CP status, session management
# - CP Engines: State transitions, telemetry, charging sessions
# - CP Monitors: Health checks, fault detection, recovery
# - Drivers: Request status, charging progress, completion
#
# STARTUP: docker compose up -d
# LOGS: docker compose logs -f [service-name]
# DASHBOARD: http://localhost:8000
# STOP: docker compose down

services:
  # ========== INFRASTRUCTURE ==========
  
  # Kafka Message Broker
  kafka:
    image: apache/kafka:3.7.0
    container_name: ev-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADVERTISED_HOST:-localhost}:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - evcharging-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ========== CENTRAL CONTROLLER ==========
  
  ev-central:
    build:
      context: .
      dockerfile: docker/Dockerfile.central
    container_name: ev-central
    ports:
      - "8000:8000"  # HTTP Dashboard
      - "9999:9999"  # TCP Control
    environment:
      CENTRAL_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CENTRAL_HTTP_PORT: 8000
      CENTRAL_LISTEN_PORT: 9999
      CENTRAL_LOG_LEVEL: INFO
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ========== CHARGING POINT ENGINES (5 CPs) ==========
  
  ev-cp-e-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-1
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-001
      CP_ENGINE_HEALTH_PORT: 8001
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 22.0
      CP_ENGINE_EURO_RATE: 0.30
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-2
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-002
      CP_ENGINE_HEALTH_PORT: 8002
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 50.0
      CP_ENGINE_EURO_RATE: 0.35
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-3:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-3
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-003
      CP_ENGINE_HEALTH_PORT: 8003
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 43.0
      CP_ENGINE_EURO_RATE: 0.32
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-4:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-4
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-004
      CP_ENGINE_HEALTH_PORT: 8004
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 150.0
      CP_ENGINE_EURO_RATE: 0.40
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-5:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-5
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-005
      CP_ENGINE_HEALTH_PORT: 8005
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 7.2
      CP_ENGINE_EURO_RATE: 0.28
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-6:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-6
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-006
      CP_ENGINE_HEALTH_PORT: 8006
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 11.0
      CP_ENGINE_EURO_RATE: 0.29
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-7:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-7
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-007
      CP_ENGINE_HEALTH_PORT: 8007
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 100.0
      CP_ENGINE_EURO_RATE: 0.38
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-8:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-8
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-008
      CP_ENGINE_HEALTH_PORT: 8008
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 22.0
      CP_ENGINE_EURO_RATE: 0.31
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-9:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-9
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-009
      CP_ENGINE_HEALTH_PORT: 8009
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 75.0
      CP_ENGINE_EURO_RATE: 0.36
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-e-10:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-10
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      CP_ENGINE_CP_ID: CP-010
      CP_ENGINE_HEALTH_PORT: 8010
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 350.0
      CP_ENGINE_EURO_RATE: 0.45
      CP_ENGINE_TELEMETRY_INTERVAL: 1.0
    depends_on:
      kafka:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  # ========== CHARGING POINT MONITORS (10 Monitors) ==========
  
  ev-cp-m-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-1
    environment:
      CP_MONITOR_CP_ID: CP-001
      CP_MONITOR_CP_E_HOST: ev-cp-e-1
      CP_MONITOR_CP_E_PORT: 8001
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-1
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-2
    environment:
      CP_MONITOR_CP_ID: CP-002
      CP_MONITOR_CP_E_HOST: ev-cp-e-2
      CP_MONITOR_CP_E_PORT: 8002
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-2
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-3:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-3
    environment:
      CP_MONITOR_CP_ID: CP-003
      CP_MONITOR_CP_E_HOST: ev-cp-e-3
      CP_MONITOR_CP_E_PORT: 8003
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-3
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-4:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-4
    environment:
      CP_MONITOR_CP_ID: CP-004
      CP_MONITOR_CP_E_HOST: ev-cp-e-4
      CP_MONITOR_CP_E_PORT: 8004
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-4
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-5:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-5
    environment:
      CP_MONITOR_CP_ID: CP-005
      CP_MONITOR_CP_E_HOST: ev-cp-e-5
      CP_MONITOR_CP_E_PORT: 8005
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-5
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-6:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-6
    environment:
      CP_MONITOR_CP_ID: CP-006
      CP_MONITOR_CP_E_HOST: ev-cp-e-6
      CP_MONITOR_CP_E_PORT: 8006
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-6
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-7:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-7
    environment:
      CP_MONITOR_CP_ID: CP-007
      CP_MONITOR_CP_E_HOST: ev-cp-e-7
      CP_MONITOR_CP_E_PORT: 8007
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-7
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-8:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-8
    environment:
      CP_MONITOR_CP_ID: CP-008
      CP_MONITOR_CP_E_HOST: ev-cp-e-8
      CP_MONITOR_CP_E_PORT: 8008
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-8
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-9:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-9
    environment:
      CP_MONITOR_CP_ID: CP-009
      CP_MONITOR_CP_E_HOST: ev-cp-e-9
      CP_MONITOR_CP_E_PORT: 8009
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-9
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-cp-m-10:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-10
    environment:
      CP_MONITOR_CP_ID: CP-010
      CP_MONITOR_CP_E_HOST: ev-cp-e-10
      CP_MONITOR_CP_E_PORT: 8010
      CP_MONITOR_CENTRAL_HOST: ${CENTRAL_HOST:-ev-central}
      CP_MONITOR_CENTRAL_PORT: ${CENTRAL_PORT:-8000}
      CP_MONITOR_HEALTH_INTERVAL: 2.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-10
    networks:
      - evcharging-network
    restart: unless-stopped

  # ========== DRIVER CLIENTS (5 Drivers) ==========
  
  ev-driver-alice:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver-alice
    environment:
      DRIVER_DRIVER_ID: driver-alice
      DRIVER_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      DRIVER_REQUEST_INTERVAL: 5.0
      DRIVER_LOG_LEVEL: INFO
      DRIVER_DASHBOARD_PORT: 8100
      DRIVER_CENTRAL_HTTP_URL: ${CENTRAL_HTTP_URL:-http://ev-central:8000}
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    ports:
      - "8100:8100"
    depends_on:
      kafka:
        condition: service_started
      ev-central:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-driver-bob:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver-bob
    environment:
      DRIVER_DRIVER_ID: driver-bob
      DRIVER_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      DRIVER_REQUEST_INTERVAL: 6.0
      DRIVER_LOG_LEVEL: INFO
      DRIVER_DASHBOARD_PORT: 8101
      DRIVER_CENTRAL_HTTP_URL: ${CENTRAL_HTTP_URL:-http://ev-central:8000}
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    ports:
      - "8101:8101"
    depends_on:
      kafka:
        condition: service_started
      ev-central:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-driver-charlie:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver-charlie
    environment:
      DRIVER_DRIVER_ID: driver-charlie
      DRIVER_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      DRIVER_REQUEST_INTERVAL: 7.0
      DRIVER_LOG_LEVEL: INFO
      DRIVER_DASHBOARD_PORT: 8102
      DRIVER_CENTRAL_HTTP_URL: ${CENTRAL_HTTP_URL:-http://ev-central:8000}
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    ports:
      - "8102:8102"
    depends_on:
      kafka:
        condition: service_started
      ev-central:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-driver-david:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver-david
    environment:
      DRIVER_DRIVER_ID: driver-david
      DRIVER_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      DRIVER_REQUEST_INTERVAL: 8.0
      DRIVER_LOG_LEVEL: INFO
      DRIVER_DASHBOARD_PORT: 8103
      DRIVER_CENTRAL_HTTP_URL: ${CENTRAL_HTTP_URL:-http://ev-central:8000}
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    ports:
      - "8103:8103"
    depends_on:
      kafka:
        condition: service_started
      ev-central:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

  ev-driver-eve:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver-eve
    environment:
      DRIVER_DRIVER_ID: driver-eve
      DRIVER_KAFKA_BOOTSTRAP: ${KAFKA_BOOTSTRAP:-kafka:9092}
      DRIVER_REQUEST_INTERVAL: 4.5
      DRIVER_LOG_LEVEL: INFO
      DRIVER_DASHBOARD_PORT: 8104
      DRIVER_CENTRAL_HTTP_URL: ${CENTRAL_HTTP_URL:-http://ev-central:8000}
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    ports:
      - "8104:8104"
    depends_on:
      kafka:
        condition: service_started
      ev-central:
        condition: service_started
    networks:
      - evcharging-network
    restart: unless-stopped

networks:
  evcharging-network:
    driver: bridge

volumes:
  kafka-data:
