# EV Charging Simulation - Full Local Deployment
# Extended configuration with 10+ services for comprehensive testing
# Runs autonomously without user interaction

services:
  # Kafka (KRaft mode - no Zookeeper needed)
  kafka:
    image: apache/kafka:3.7.0
    container_name: ev-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evcharging-network

  # EV Central Controller
  ev-central:
    build:
      context: .
      dockerfile: docker/Dockerfile.central
    container_name: ev-central
    ports:
      - "8000:8000"  # HTTP Dashboard
      - "9999:9999"  # TCP Control
    environment:
      CENTRAL_KAFKA_BOOTSTRAP: kafka:9092
      CENTRAL_HTTP_PORT: 8000
      CENTRAL_LISTEN_PORT: 9999
      CENTRAL_LOG_LEVEL: INFO
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - evcharging-network
    restart: unless-stopped

  # Charging Point Engine 1
  ev-cp-e-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-1
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: kafka:9092
      CP_ENGINE_CP_ID: CP-001
      CP_ENGINE_HEALTH_PORT: 8001
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 22.0
      CP_ENGINE_EURO_RATE: 0.30
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - evcharging-network
    restart: unless-stopped

  # Charging Point Engine 2
  ev-cp-e-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_e
    container_name: ev-cp-e-2
    environment:
      CP_ENGINE_KAFKA_BOOTSTRAP: kafka:9092
      CP_ENGINE_CP_ID: CP-002
      CP_ENGINE_HEALTH_PORT: 8001
      CP_ENGINE_LOG_LEVEL: INFO
      CP_ENGINE_KW_RATE: 50.0
      CP_ENGINE_EURO_RATE: 0.35
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - evcharging-network
    restart: unless-stopped

  # Charging Point Monitor 1
  ev-cp-m-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-1
    environment:
      CP_MONITOR_CP_ID: CP-001
      CP_MONITOR_CP_E_HOST: ev-cp-e-1
      CP_MONITOR_CP_E_PORT: 8001
      CP_MONITOR_CENTRAL_HOST: ev-central
      CP_MONITOR_CENTRAL_PORT: 8000
      CP_MONITOR_HEALTH_INTERVAL: 1.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-1
    networks:
      - evcharging-network
    restart: unless-stopped

  # Charging Point Monitor 2
  ev-cp-m-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.cp_m
    container_name: ev-cp-m-2
    environment:
      CP_MONITOR_CP_ID: CP-002
      CP_MONITOR_CP_E_HOST: ev-cp-e-2
      CP_MONITOR_CP_E_PORT: 8001
      CP_MONITOR_CENTRAL_HOST: ev-central
      CP_MONITOR_CENTRAL_PORT: 8000
      CP_MONITOR_HEALTH_INTERVAL: 1.0
      CP_MONITOR_LOG_LEVEL: INFO
    depends_on:
      - ev-central
      - ev-cp-e-2
    networks:
      - evcharging-network
    restart: unless-stopped

  # EV Driver Client
  ev-driver:
    build:
      context: .
      dockerfile: docker/Dockerfile.driver
    container_name: ev-driver
    environment:
      DRIVER_DRIVER_ID: driver-alice
      DRIVER_KAFKA_BOOTSTRAP: kafka:9092
      DRIVER_REQUEST_INTERVAL: 4.0
      DRIVER_LOG_LEVEL: INFO
    volumes:
      - ./requests.txt:/app/requests.txt:ro
    depends_on:
      kafka:
        condition: service_healthy
      ev-central:
        condition: service_started
    networks:
      - evcharging-network

networks:
  evcharging-network:
    driver: bridge

volumes:
  kafka-data:
